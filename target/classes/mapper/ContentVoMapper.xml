<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--注意命名空间映射-->
<mapper namespace="top.arieslee.myblog.dao.ContentVoDao">

    <!--基本结果集-->
    <resultMap id="baseResultMap" type="top.arieslee.myblog.modal.VO.ContentVo">
        <id column="cid" jdbcType="INTEGER" property="cid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="slug" jdbcType="VARCHAR" property="slug"/>
        <result column="created" jdbcType="INTEGER" property="created"/>
        <result column="modified" jdbcType="INTEGER" property="modified"/>
        <result column="author_id" jdbcType="INTEGER" property="authorId"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="categories" jdbcType="VARCHAR" property="categories"/>
        <result column="hits" jdbcType="INTEGER" property="hits"/>
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum"/>
        <result column="allow_comment" jdbcType="BIT" property="allowComment"/>
        <result column="allow_ping" jdbcType="BIT" property="allowPing"/>
        <result column="allow_feed" jdbcType="BIT" property="allowFeed"/>
    </resultMap>
    <!--文章结果集-->
    <resultMap extends="baseResultMap" id="baseResultMapWithBLOBs" type="top.arieslee.myblog.modal.VO.ContentVo">
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>

    <!--where 子句-->
    <sql id="Example_Where_Clause">
        <where>
            <!--遍历每个模块，多个标准模版之间用or连接-->
            <foreach collection="criteriaList" item="criteria" separator="or">
                <!-- 判断模版是否为空 -->
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <!-- 遍历模块中每个条件实例 -->
                        <foreach collection="criteria.criterionList" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="valueItem" open="(" close=")"
                                             separator=",">
                                        #{valueItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <!--基本字段-->
    <sql id="Base_Column_List">
        cid, title, slug, created, modified, author_id, type,status, tags, categories, hits,
        comments_num, allow_comment, allow_ping, allow_feed
    </sql>
    <!--文章字段-->
    <sql id="Blob_Column_List">
        content
    </sql>

    <!--
        SELECT
    -->
    <!--根据模板查找文章，包括文章内容-->
    <select id="selectByExampleWithBLOBs" parameterType="top.arieslee.myblog.modal.VO.ContentVoExample"
            resultMap="baseResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_contents
        <!-- _parameter是mybatis的内置属性，代表传入参数-->
        <if test="_parameter !=null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause!=null">
            order by ${orderByClause}
        </if>
    </select>
    <!--根据模板查找文章，不包括文章内容-->
    <select id="selectByExample" parameterType="top.arieslee.myblog.modal.VO.ContentVoExample"
            resultMap="baseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_contents
        <!-- _parameter是mybatis的内置属性，代表传入参数-->
        <if test="_parameter !=null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause!=null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_contents
    where cid = #{cid,jdbcType=INTEGER}
  </delete>

    <delete id="deleteByExample" parameterType="top.arieslee.myblog.modal.VO.ContentVoExample">
        delete from t_contents
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <!--根据cid查找content-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="baseResultMapWithBLOBs">
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_contents
        where cid=#{cid,jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="top.arieslee.myblog.modal.VO.ContentVo" useGeneratedKeys="true" keyProperty="cid">
    insert into t_contents (cid, title, slug,
      created, modified, author_id,
      type, status, tags,
      categories, hits, comments_num,
      allow_comment, allow_ping, allow_feed,
      content)
    values (#{cid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
      #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
      #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
      #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
      #{content,jdbcType=LONGVARCHAR})
  </insert>

    <insert id="insertSelective" parameterType="top.arieslee.myblog.modal.VO.ContentVo" useGeneratedKeys="true" keyProperty="cid">
        insert into t_contents
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                cid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="slug != null">
                slug,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="modified != null">
                modified,
            </if>
            <if test="authorId != null">
                author_id,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="categories != null">
                categories,
            </if>
            <if test="hits != null">
                hits,
            </if>
            <if test="commentsNum != null">
                comments_num,
            </if>
            <if test="allowComment != null">
                allow_comment,
            </if>
            <if test="allowPing != null">
                allow_ping,
            </if>
            <if test="allowFeed != null">
                allow_feed,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="cid != null">
                #{cid,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <!--根据分类获取文章列表-->
    <select id="findByMid" parameterType="java.lang.Integer" resultMap="baseResultMapWithBLOBs">
        select content.*
        from t_contents as content left join `t_relationships` as relationship on content.cid=relationship.cid
        where content.status='publish' and content.type='post' and relationship.mid=#{mid}
    </select>

    <resultMap id="ArchiveDtoMap" type="top.arieslee.myblog.dto.ArchiveDto">
        <id column="date" property="date" />
        <result column="count" property="count" />
    </resultMap>
    <select id="findArchiveDtoByMonth" resultMap="ArchiveDtoMap">
        select FROM_UNIXTIME(created,'%Y年%m月') as date,count(*) as count
        from t_contents
        where type='post' and status='publish'
        group by date
        order by date desc
    </select>

    <!--
        UPDATE
    -->
    <!--根据cid值更新-->
    <update id="updateByPrimaryKey" parameterType="top.arieslee.myblog.modal.VO.ContentVo" >
        update t_contents
        set title = #{title,jdbcType=VARCHAR},
        slug = #{slug,jdbcType=VARCHAR},
        created = #{created,jdbcType=INTEGER},
        modified = #{modified,jdbcType=INTEGER},
        author_id = #{authorId,jdbcType=INTEGER},
        type = #{type,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        categories = #{categories,jdbcType=VARCHAR},
        hits = #{hits,jdbcType=INTEGER},
        comments_num = #{commentsNum,jdbcType=INTEGER},
        allow_comment = #{allowComment,jdbcType=BIT},
        allow_ping = #{allowPing,jdbcType=BIT},
        allow_feed = #{allowFeed,jdbcType=BIT}
        where cid = #{cid,jdbcType=INTEGER}
    </update>

    <update id="updateByExampleSelective" parameterType="map">
        update t_contents
        <set>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.slug != null">
                slug = #{record.slug,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null">
                created = #{record.created,jdbcType=INTEGER},
            </if>
            <if test="record.modified != null">
                modified = #{record.modified,jdbcType=INTEGER},
            </if>
            <if test="record.authorId != null">
                author_id = #{record.authorId,jdbcType=INTEGER},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=VARCHAR},
            </if>
            <if test="record.tags != null">
                tags = #{record.tags,jdbcType=VARCHAR},
            </if>
            <if test="record.categories != null">
                categories = #{record.categories,jdbcType=VARCHAR},
            </if>
            <if test="record.hits != null">
                hits = #{record.hits,jdbcType=INTEGER},
            </if>
            <if test="record.commentsNum != null">
                comments_num = #{record.commentsNum,jdbcType=INTEGER},
            </if>
            <if test="record.allowComment != null">
                allow_comment = #{record.allowComment,jdbcType=BIT},
            </if>
            <if test="record.allowPing != null">
                allow_ping = #{record.allowPing,jdbcType=BIT},
            </if>
            <if test="record.allowFeed != null">
                allow_feed = #{record.allowFeed,jdbcType=BIT},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="top.arieslee.myblog.modal.VO.ContentVo">
        update t_contents
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="slug != null">
                slug = #{slug,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=INTEGER},
            </if>
            <if test="authorId != null">
                author_id = #{authorId,jdbcType=INTEGER},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="categories != null">
                categories = #{categories,jdbcType=VARCHAR},
            </if>
            <if test="hits != null">
                hits = #{hits,jdbcType=INTEGER},
            </if>
            <if test="commentsNum != null">
                comments_num = #{commentsNum,jdbcType=INTEGER},
            </if>
            <if test="allowComment != null">
                allow_comment = #{allowComment,jdbcType=BIT},
            </if>
            <if test="allowPing != null">
                allow_ping = #{allowPing,jdbcType=BIT},
            </if>
            <if test="allowFeed != null">
                allow_feed = #{allowFeed,jdbcType=BIT},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where cid = #{cid,jdbcType=INTEGER}
    </update>

    <select id="countByExample" parameterType="top.arieslee.myblog.modal.VO.ContentVoExample" resultType="java.lang.Long" >
        select count(*) from t_contents
        <include refid="Example_Where_Clause" />
    </select>

    <select id="findByCatalog" resultMap="baseResultMap" parameterType="Integer">
    select a.*
    from t_contents a left join t_relationships b on a.cid = b.cid
    where b.mid = #{value} and a.status = 'publish' and a.type = 'post'
    order by a.created desc
  </select>
</mapper>